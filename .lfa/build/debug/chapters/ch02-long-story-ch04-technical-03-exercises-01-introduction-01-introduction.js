registerChapter({ chapter: "ch02-long-story-ch04-technical-03-exercises-01-introduction-01-introduction", content: function () { return "<h1 id=\"lfa-exercises-module\">LFA Exercises Module</h1>\n<h2 id=\"introduction\">Introduction</h2>\n<p>Exercises are created with the help of mixins. The structure of the exercises is\nhierachical (i.e. a tree of exercises). An <code>+exercise</code> can contain any combination\n<code>+exercise</code>, <code>+pickone</code>-s etc.</p>\n<p><strong>Parameters</strong> are usually optional, but sometimes you need them in order\nto be able to modify how an exercise looks or to get its score / other saved\nattributes.</p>\n<p>These parameters are often given in the form of a JavaScript object (e.g.\n<code>{name: &#39;Unit 1 Exercise 3&#39;, answer: true, btnClass: &#39;btn-danger&#39;}</code>). This\nallows for more flexible argument management.</p>\n<p>An exercise also automatically gets an unique id in the DOM, in the form\nof <code>ex_&lt;unique_number&gt;</code> which is  consistently generated as a hash of its\ncontents (or its name, if the content is empty). So, as long as you don&#39;t\nmodify the content, the id remains the same, and the results will persist\nbetween page loads.</p>\n<p>This id is used as a key to save and retrieve their state from the local\nstorage. All exercise types automatically save their state and restore it when\nthe page is reloaded.</p>\n<p>It is reccomended that each important exercise have a name, so that it (or\nits attributes) can be retrieved in review questions.</p>\n"; }});