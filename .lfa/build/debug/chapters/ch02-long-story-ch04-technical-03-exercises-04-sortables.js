registerChapter({ chapter: "ch02-long-story-ch04-technical-03-exercises-04-sortables", content: function () { return "<h2 id=\"drag-and-sort\">Drag and sort</h2>\n<h3 id=\"description\">Description</h3>\n<p><strong>Drag-and-Sort</strong> (<code>+drag-and-sort</code>) is a type of exercise where the user is asked\nto drag and drop items until a specific order is reached.</p>\n<p>An <code>+drag-and-sort</code> exercise has one or more <code>.item</code> elements.</p>\n<p>If .item-s cannot be in the exercise root, place them in a <code>.items</code> div.</p>\n<h3 id=\"parameters\">Parameters</h3>\n<p>Options object, with the following overiddable fields:</p>\n<ul>\n<li><code>group</code></li>\n<li><code>handle</code> - Restricts sort start click/touch to the specified element</li>\n<li><code>draggable</code> - Specifies which items inside the element should be sortable</li>\n<li><code>scoreByRelativeOrder</code> - set to true to get the score computed in relation\nto elements&#39; relative order, not target position in row</li>\n</ul>\n<p>For more information on how these are used, see documentation for\n<a href=\"https://github.com/RubaXa/Sortable\">Sortable</a></p>\n<h3 id=\"scoring\">Scoring</h3>\n<p>Default scoring:</p>\n<p>&#39;scoreByRelativeOrder&#39; scoring</p>\n<ul>\n<li>If there are N <em>good</em> elements. each elements each selected one adds +100/N score</li>\n<li>Each selected <em>bad</em> element substracts 100/N from the score</li>\n<li>Score cannot be lower than 0</li>\n<li>The score is 100 when all good elements are selected and no bad element is selected</li>\n</ul>\n<h3 id=\"example-source-\">Example (source)</h3>\n<pre><code>+exercise({name: &#39;Ch04Ex01A&#39;})\n  .row\n    +statement\n      p Order the following numbers in ascending order\n    .progress-box\n    .score-box\n    .is-done-box\n    +drag-and-sort\n      span.item(data-index=50) 50\n      span.item(data-index=40) 40\n      span.item(data-index=30) 30\n      span.item(data-index=20) 20\n      span.item(data-index=10) 10\n\n  .row\n    +statement\n      p Make a wish for the Education Ministry.\n\n    +drag-and-sort({scoreBox: true})\n      i.fa.fa-exclamation.item(data-index=3)\n        | &amp;nbsp;three\n      i.fa.fa-coffee.item(data-index=2)\n        | &amp;nbsp;two\n      i.fa.fa-asterisk.item(data-index=1)\n        | &amp;nbsp;one\n\n  .row\n    +statement\n      | Drag and drop planets below to order them according to distance from the Sun.\n</code></pre><p><strong>Rendered Example</strong></p>\n<script>var ex_547459936 = Exercises.push(new Exercises.Exercise(547459936, '{\"name\":\"Ch04Ex01A\",\"scoreBox\":true,\"isDoneBox\":true,\"progressBox\":true}'));\n</script><div id=\"ex_547459936\" class=\"exercise\"><div class=\"row\"><div class=\"statement\"><p>Order the following numbers in ascending order</p></div><div class=\"progress-box\"></div><div class=\"score-box\"></div><div class=\"is-done-box\"></div><div class=\"row\"><script>var ex_1388850185 = Exercises.push(new Exercises.DragAndSort(1388850185, '{\"name\":\"sortScoreSampleExercise-1\"}'));\n</script><div id=\"ex_1388850185\" class=\"drag-and-sort\"><b>Score decided by absolute position</b><span data-index='50' class=\"item\">50</span><span data-index='40' class=\"item\">40</span><span data-index='30' class=\"item\">30</span><span data-index='20' class=\"item\">20</span><span data-index='10' class=\"item\">10</span><div class=\"score-box\"></div></div><script>Exercises.pop();</script></div><div class=\"row\"><script>var ex_737077014 = Exercises.push(new Exercises.DragAndSort(737077014, '{\"name\":\"sortScoreSampleExercise-2\",\"scoreByRelativeOrder\":true}'));\n</script><div id=\"ex_737077014\" class=\"drag-and-sort\"><b>Score decided by relative order:</b><span data-index='50' class=\"item\">50</span><span data-index='40' class=\"item\">40</span><span data-index='30' class=\"item\">30</span><span data-index='20' class=\"item\">20</span><span data-index='10' class=\"item\">10</span><div class=\"score-box\"></div></div><script>Exercises.pop();</script></div></div><div class=\"row\"><div class=\"statement\"><p>Make a wish for the Education Ministry.</p></div><script>var ex_657568643 = Exercises.push(new Exercises.DragAndSort(657568643, ''));\n</script><div id=\"ex_657568643\" class=\"drag-and-sort\"><i data-index='3' class=\"fa fa-exclamation item\">&nbsp;three</i><i data-index='2' class=\"fa fa-coffee item\">&nbsp;two</i><i data-index='1' class=\"fa fa-asterisk item\">&nbsp;one</i></div><script>Exercises.pop();</script></div></div><script>Exercises.pop();</script><h4 id=\"another-example-source-\">Another example (source)</h4>\n<pre><code>  +exercise({name:&#39;ch04-highlighters-e3&#39;})\n    +statement\n      h4 Exercise:  Planets and satellites\n      | Sort the following celestial bodies by their size:\n    .progress-box\n    +drag-and-sort\n      .row.items\n        .item.bad.col-md-3(data-index=3) Mercury\n          +img(&#39;http://upload.wikimedia.org/wikipedia/commons/8/88/Reprocessed_Mariner_10_image_of_Mercury.jpg&#39;)\n        .item.good.col-md-3(data-index=2) Io\n          +img(&#39;http://upload.wikimedia.org/wikipedia/commons/7/7b/Io_highest_resolution_true_color.jpg&#39;)\n        .item.bad.col-md-3(data-index=4) Mars\n          +img(&#39;http://upload.wikimedia.org/wikipedia/commons/8/82/Mars_and_Syrtis_Major_-_GPN-2000-000923.jpg&#39;)\n        .item.good.col-md-3(data-index=1) Phobos\n          +img(&#39;http://upload.wikimedia.org/wikipedia/commons/5/5c/Phobos_colour_2008.jpg&#39;)\n</code></pre><h4 id=\"another-example-rendered-\">Another example (rendered)</h4>\n<script>var ex_120445821 = Exercises.push(new Exercises.Exercise(120445821, '{\"name\":\"ch04-highlighters-e3\"}'));\n</script><div id=\"ex_120445821\" class=\"exercise\"><div class=\"statement\"><h4>Exercise:  Planets and satellites</h4>Sort the following celestial bodies by their size:</div><div class=\"progress-box\"></div><script>var ex_93472560 = Exercises.push(new Exercises.DragAndSort(93472560, ''));\n</script><div id=\"ex_93472560\" class=\"drag-and-sort\"><div class=\"row items\"><div data-index='3' class=\"item bad col-md-3\">Mercury<img src=\"http://upload.wikimedia.org/wikipedia/commons/8/88/Reprocessed_Mariner_10_image_of_Mercury.jpg\"/></div><div data-index='2' class=\"item good col-md-3\">Io<img src=\"http://upload.wikimedia.org/wikipedia/commons/7/7b/Io_highest_resolution_true_color.jpg\"/></div><div data-index='4' class=\"item bad col-md-3\">Mars<img src=\"http://upload.wikimedia.org/wikipedia/commons/8/82/Mars_and_Syrtis_Major_-_GPN-2000-000923.jpg\"/></div><div data-index='1' class=\"item good col-md-3\">Phobos<img src=\"http://upload.wikimedia.org/wikipedia/commons/5/5c/Phobos_colour_2008.jpg\"/></div></div></div><script>Exercises.pop();</script></div><script>Exercises.pop();</script><p>Sort can be done vertically or horizontally, dependind on how the emements are laid in the page.</p>\n<pre><code>+exercise({name: &#39;Ch04Ex02&#39;})\n  .row\n    +statement\n      | Drag and drop planets below to order them according to distance from the Sun.\n\n  .progress-box\n  .score-box\n  .is-done-box\n  +drag-and-sort({name: &#39;Ch04Ex02a&#39;})\n    ul.items\n      li.item(data-index=&#39;7&#39;) Saturn\n      li.item(data-index=&#39;2&#39;) Venus\n      li.item(data-index=&#39;8&#39;) Uranus\n      li.item(data-index=&#39;4&#39;) Mars\n      li.item(data-index=&#39;9&#39;) Neptune\n      li.item(data-index=&#39;3&#39;) Earth\n      li.item(data-index=&#39;5&#39;) Asteroid Belt\n      li.item(data-index=&#39;1&#39;) Mercury\n\n+exercise({name: &#39;Ch04Ex02&#39;})\n  .score-box\n  .progress-box\n  +drag-and-sort\n    .row.items\n      .x.col-md-6.item(data-index=&#39;1&#39;)\n        svg(width=&#39;200px&#39;, height=&#39;200px&#39;, viewbox=&#39;0 0 200 200&#39;, xmlns=&#39;http://www.w3.org/2000/svg&#39;, version=&#39;1.1&#39;)\n          polygon(style=&#39;fill: none; stroke: #000000; stroke-width: 2.5px;&#39;, points=&#39;183.138438763306,172 16.8615612366939,172 100,28&#39;)\n      .col-md-6.item(data-index=&#39;3&#39;)\n        svg(width=&#39;200px&#39;, height=&#39;200px&#39;, viewbox=&#39;0 0 200 200&#39;, xmlns=&#39;http://www.w3.org/2000/svg&#39;, version=&#39;1.1&#39;)\n          polygon(style=&#39;fill: none; stroke: #000000; stroke-width: 2.5px;&#39;, points=&#39;183.138438763306,172 16.8615612366939,172 16.8615612366939,28 183.138438763306,28&#39;)\n</code></pre><script>var ex_588354005 = Exercises.push(new Exercises.Exercise(588354005, '{\"name\":\"Ch04Ex02\"}'));\n</script><div id=\"ex_588354005\" class=\"exercise\"><div class=\"row\"><div class=\"statement\">Drag and drop planets below to order them according to distance from the Sun.</div></div><div class=\"progress-box\"></div><div class=\"score-box\"></div><div class=\"is-done-box\"></div><script>var ex_412602825 = Exercises.push(new Exercises.DragAndSort(412602825, '{\"name\":\"Ch04Ex02a\"}'));\n</script><div id=\"ex_412602825\" class=\"drag-and-sort\"><ul class=\"items\"><li data-index=\"7\" class=\"item\">Saturn</li><li data-index=\"2\" class=\"item\">Venus</li><li data-index=\"8\" class=\"item\">Uranus</li><li data-index=\"4\" class=\"item\">Mars</li><li data-index=\"9\" class=\"item\">Neptune</li><li data-index=\"3\" class=\"item\">Earth</li><li data-index=\"5\" class=\"item\">Asteroid Belt</li><li data-index=\"1\" class=\"item\">Mercury</li></ul></div><script>Exercises.pop();</script></div><script>Exercises.pop();</script><script>var ex_1299263183 = Exercises.push(new Exercises.Exercise(1299263183, '{\"name\":\"Ch04Ex03\"}'));\n</script><div id=\"ex_1299263183\" class=\"exercise\"><div class=\"progress-box\"></div><div class=\"score-box\"></div><script>var ex_1530664317 = Exercises.push(new Exercises.DragAndSort(1530664317, '{\"name\":\"Ch04Ex03a\"}'));\n</script><div id=\"ex_1530664317\" class=\"drag-and-sort\"><div class=\"row items\"><div data-index=\"1\" class=\"x col-md-6 item\"><svg width=\"200px\" height=\"200px\" viewbox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"><polygon style=\"fill: none; stroke: #000000; stroke-width: 2.5px;\" points=\"183.138438763306,172 16.8615612366939,172 100,28\"></polygon></svg></div><div data-index=\"3\" class=\"col-md-6 item\"><svg width=\"200px\" height=\"200px\" viewbox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"><polygon style=\"fill: none; stroke: #000000; stroke-width: 2.5px;\" points=\"183.138438763306,172 16.8615612366939,172 16.8615612366939,28 183.138438763306,28\"></polygon></svg></div></div></div><script>Exercises.pop();</script></div><script>Exercises.pop();</script><h2 id=\"drag-to-bucket\">Drag to Bucket</h2>\n<h3 id=\"description\">Description</h3>\n<p><strong>Drag-to-Bucket</strong> (<code>+drag-to-bucket</code>) is a type of exercise where the user is asked\nto drag and drop items into various containers, i.e. &#39;.bucket&#39;-s.</p>\n<p>A <code>+drag-to-bucket</code> exercise has one or more <code>.bucket</code> .</p>\n<p>If .buckets-s cannot be in the exercise root, place them in a <code>.buckets</code> element.\nIf .item-s inside a bucket cannot be inside the .bucket element, place them in an\n<code>.items</code> element.</p>\n<p>A bucket is defined  like this <code>.bucket(data-name=&#39;a_name_for_the_bucket&#39;)</code>\nItems that should go inside the bucket are defined like this:\n   <code>.item(data-index=&lt;number&gt;, data-target=&#39;a_name_for_the_bucket&#39;) &lt;item&#39;s jade content&gt;</code></p>\n<h3 id=\"parameters\">Parameters</h3>\n<p>Options object, with the usual overiddable fields. Extra options:</p>\n<ul>\n<li><strong>orderInBuckets</strong>: if truthy elements inside the bucket must be sorted in order\n  to get the highest score</li>\n<li><strong>bucketsSortable</strong>: if truthy, buckets themselves can be dragged and dropped</li>\n</ul>\n<h3 id=\"scoring\">Scoring</h3>\n<p>The score is computed using the following algorithm:</p>\n<ol>\n<li><p>We verify that items are inside the bucket. For each bucket we look at the ements:</p>\n<ul>\n<li>+1 if the element belongs to the bucket</li>\n<li>-1 if the element does not belong</li>\n<li>at the end score is scaled from 0-100 for each bucket</li>\n<li>resulting score is averaged</li>\n</ul>\n</li>\n<li><p>If &#39;orderInBuckets&#39; option is on, then this score is averaged with the score for\neach buckets, computed in the same way as drag-to-sort is computed</p>\n<ul>\n<li>If there are N <em>good</em> elements. each elements each selected one adds +100/N score</li>\n<li>Each selected <em>bad</em> element substracts 100/N from the score</li>\n<li>Score cannot be lower than 0</li>\n<li>The score is 100 when all good elements are selected and no bad element is selected</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"example-source-\">Example (source)</h3>\n<pre><code>  +exercise({name:&#39;ch04-highlighters-e10&#39;})\n    .progress-box\n    +statement\n      h4 Exercise: Drag to bucket\n      | Put the odd numbers in the odd bucket and the even\n      | numbers to the even bucket. Order them inside the bucket\n      | in ascending order.\n\n    +drag-to-bucket({orderInBuckets: true, bucketsSortable: true})\n      //- Container for bucket\n      .row.buckets\n        .bucket(data-name=&#39;unassigned&#39;).col-md-12\n          strong Source\n          .items.well.well-lg\n            span.item(data-index=55, data-target=&#39;odd&#39;) 55\n            span.item(data-index=22, data-target=&#39;even&#39;) 22\n            span.item(data-index=17, data-target=&#39;odd&#39;) 17\n            span.item(data-index=31, data-target=&#39;odd&#39;) 31\n            span.item(data-index=10, data-target=&#39;even&#39;) 10\n        .bucket(data-name=&#39;odd&#39;).col-md-6\n          strong Odd\n          .items.well.well-lg\n            span.item(data-index=27, data-target=&#39;odd&#39;) 27\n            span.item(data-index=28, data-target=&#39;even&#39;) 28\n        .bucket(data-name=&#39;even&#39;).col-md-6\n          strong Even\n          .items.well.well-lg\n            span.item(data-index=9, data-target=&#39;odd&#39;) 9\n            span.item(data-index=72, data-target=&#39;even&#39;) 72\n</code></pre><h3 id=\"rendered-exercise-\">Rendered exercise:</h3>\n<script>var ex_2113189061 = Exercises.push(new Exercises.Exercise(2113189061, '{\"name\":\"ch04-highlighters-e10\"}'));\n</script><div id=\"ex_2113189061\" class=\"exercise\"><div class=\"progress-box\"></div><div class=\"statement\"><h4>Exercise: Drag to bucket</h4>Put the odd numbers in the odd bucket and the even\nnumbers to the even bucket. Order them inside the bucket\nin ascending order.</div><script>var ex_1671084246 = Exercises.push(new Exercises.DragToBucket(1671084246, '{\"orderInBuckets\":true,\"bucketsSortable\":true}'));\n</script><div id=\"ex_1671084246\" class=\"drag-to-bucket\"><div class=\"row buckets\"><div data-name=\"unassigned\" class=\"bucket col-md-12\"><strong>Source</strong><div class=\"items well well-lg\"><span data-index='55' data-target=\"odd\" class=\"item\">55</span><span data-index='22' data-target=\"even\" class=\"item\">22</span><span data-index='17' data-target=\"odd\" class=\"item\">17</span><span data-index='31' data-target=\"odd\" class=\"item\">31</span><span data-index='10' data-target=\"even\" class=\"item\">10</span></div></div><div data-name=\"odd\" class=\"bucket col-md-6\"><strong>Odd</strong><div class=\"items well well-lg\"><span data-index='27' data-target=\"odd\" class=\"item\">27</span><span data-index='28' data-target=\"even\" class=\"item\">28</span></div></div><div data-name=\"even\" class=\"bucket col-md-6\"><strong>Even</strong><div class=\"items well well-lg\"><span data-index='9' data-target=\"odd\" class=\"item\">9</span><span data-index='72' data-target=\"even\" class=\"item\">72</span></div></div></div></div><script>Exercises.pop();</script></div><script>Exercises.pop();</script>"; }});