registerChapter({ chapter: "ch02-long-story-ch04-technical-03-exercises-09-syllables", content: function () { return "<h2 id=\"combine-syllables\">Combine Syllables</h2>\n<p>The user drags and drops a palette of syllables in the shape of words which get validated</p>\n<h3 id=\"usage-\">Usage:</h3>\n<pre><code class=\"lang-jade\">+combine-syllables(options)\n  .items\n    .item(data-syl=&#39;syl&#39;) syl\n    .item(data-syl=&#39;la&#39;) la\n    .item(data-syl=&#39;ble&#39;) ble\n  .dropspot\n  button.btn.btn-default(data-target=&#39;combine-syllables.validate&#39;) Validate\n  button.btn.btn-default(data-target=&#39;combine-syllables.clearlist&#39;) Clear\n  .wordlist\n</code></pre>\n<ul>\n<li><code>.items</code> must exist and contain <code>.item</code>s that represent each syllable. </li>\n<li>The goal of the user is to drop the <code>.item</code>s in the <code>.dropspot</code> in such a order that the concatenated values of their <code>data-syl</code> make up a word in <code>options.words</code>.</li>\n<li><code>.dropspot</code> must exist and represents the drop area where the word is composed. New <code>.item</code>s will be created here with <code>position: absolute</code>, so make sure you set the <code>width</code> and <code>height</code> for this div.</li>\n<li><code>.wordlist</code> will be filled with <code>.word</code>s that the user guessess right. The most recently validated <code>.word</code> will also get <code>.last</code>.</li>\n<li>Any element with <code>data-target=&#39;combine-syllables.validate&#39;</code> will be considered a validation button and get a <code>click</code> event bound\nto it at runtime that validates the user&#39;s combination.</li>\n<li>Any element with <code>data-target=&#39;combine-syllables.clearlist&#39;</code> will be considered a clear button and get a <code>click</code> event bound\nto it at runtime that clears the word list.</li>\n<li>The exercise&#39;s div will get <code>.good</code>, <code>.bad</code>, or <code>.already-submitted</code> after each validation. These classes will be removed the next time the user interacts with the exercise.</li>\n<li>When the user starts dragging an <code>.item</code>, it gets <code>.dragging-from</code> and a new draggable <code>.item</code> with <code>position: fixed</code> is created. <code>.dragging-from</code> hides the view away by default.</li>\n<li>When the <code>.item</code> gets dropped in the <code>.dropspot</code>, the original <code>.item</code> will get <code>.used</code>. <code>.used</code> hides the view away by default.</li>\n<li>If <code>options.recall</code> is used, <code>.recall</code> will be applied to the original <code>.item</code>s while the recall animation is in progress. <code>.recall</code> hides the view away by default.</li>\n</ul>\n<h3 id=\"options-\">Options:</h3>\n<ul>\n<li><code>words</code>: list of words to validate. defaults to <code>[]</code></li>\n<li><code>recall</code>: words go back to their places when successfully validated. defaults to `true&#39;</li>\n<li><code>autoValidate</code>: pressing on the validation button is not required as input is validated continuously. defaults to <code>false</code></li>\n<li><code>bonusScore</code>: score can go over 100%. defaults to <code>false</code></li>\n<li><code>wordCount</code>: required number of validated words for 100% score. defaults to <code>words.length</code></li>\n<li><code>callback</code>: JS expression to be run with <code>eval()</code> after each validation attempt with the following context:<ul>\n<li><code>this</code> will be set to the exercises&#39;s model. guarranteed to have at least <code>id</code>, <code>words</code></li>\n<li><code>word</code> will be set to the current word</li>\n<li><code>valid</code> will be true if the word is valid</li>\n<li><code>already</code> will be true if the word is already present in the word list</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"example-\">Example:</h3>\n<p><strong>Code</strong></p>\n<pre><code class=\"lang-jade\">+combine-syllables({\n  words: [&#39;constable&#39;, &#39;syllable&#39;, &#39;constant&#39;],\n  wordCount: 3,\n  recall: true,\n  name: &#39;comb_syl1&#39;,\n})\n  .progress-box\n  .score-box\n  .row.items\n    .col-sm-10\n      .row\n        .col-sm-6\n          .row\n            .col-xs-4\n              .item(data-syl=&#39;syl&#39;) syl\n            .col-xs-4\n              .item(data-syl=&#39;la&#39;) la\n            .col-xs-4\n              .item(data-syl=&#39;ble&#39;) ble\n\n        .col-sm-6\n          .row\n            .col-xs-4\n              .item(data-syl=&#39;con&#39;) con\n            .col-xs-4\n              .item(data-syl=&#39;sta&#39;) sta\n            .col-xs-4\n              .item(data-syl=&#39;nt&#39;) nt\n    .col-sm-2.hidden-xs\n      p Guessed:\n  .row\n    .col-sm-10\n      .well.well-sm.dropspot\n        button.btn.btn-default.pull-right.hidden-xs(data-target=&#39;combine-syllables.validate&#39;) Submit\n        span.hint Drop some of the syllables above in here\n    .col-sm-2\n      button.btn.btn-default.visible-xs(data-target=&#39;combine-syllables.validate&#39;) Submit\n      p.visible-xs Guessed:\n      .well.well-sm.wordwell\n        .wordlist\n        button.btn.btn-default(data-target=&#39;combine-syllables.clearlist&#39;) Clear\n</code></pre>\n<p><strong>Style</strong></p>\n<pre><code class=\"lang-stylus\">// Basic styling:\n\n.comb_syl1\n  .dropspot\n    min-height: 3.2em // This needs to be set since .item-s are absolutely positioned\n    .btn\n      margin-top: 0.3em\n\n  .wordwell // Matching styles\n    min-height: 3.2em\n    .btn\n      margin-top: 0.3em\n\n  .items .col-sm-6 .row // Some spacing\n    margin-bottom: 0.7em\n    margin-top: 0.5em\n\n  .hint // Hide the hint when not empty\n    display: none\n\n.comb_syl1.empty // And show it when empty\n  .hint\n    display: inline\n\n// Animations:\n\n@keyframes red-text-flash\n  0% { color: red }\n  22% { color: red }\n  100% { color: auto }\n\n@keyframes red-flash\n  0% { background-color: red; color: #fff }\n  22% { background-color: red; color: #fff }\n  100% { background-color: auto }\n\n@keyframes green-text-flash\n  0% { color: green }\n  22% { color: green }\n  100% { color: auto }\n\n@keyframes green-flash\n  0% { background-color: green; color: #fff }\n  22% { background-color: green; color: #fff }\n  100% { background-color: auto; color: auto }\n\n.comb_syl1.bad\n  .dropspot .item\n    animation: red-flash 0.5s 1 linear\n\n.comb_syl1.already-submitted\n  .word.last\n    animation: red-text-flash 1.5s 1 linear\n\n.comb_syl1.good\n  button[data-target=&quot;combine-syllables.validate&quot;]\n    animation: green-flash 0.5s 1 linear\n\n  .word.last\n    animation: green-text-flash 1.5s 1 linear\n</code></pre>\n<p><strong>Rendered exercise</strong></p>\n<script>var ex_471003179 = Exercises.push(new Exercises.CombineSyllables(471003179, '{\"words\":[\"constable\",\"syllable\",\"constant\"],\"wordCount\":3,\"name\":\"comb_syl1\"}'));\n</script><div id=\"ex_471003179\" class=\"combine-syllables\"><div class=\"block\"><div class=\"progress-box\"></div><div class=\"score-box\"></div><div class=\"row items\"><div class=\"col-sm-10\"><div class=\"row\"><div class=\"col-sm-6\"><div class=\"row\"><div class=\"col-xs-4\"><div data-syl=\"syl\" class=\"item\">syl</div></div><div class=\"col-xs-4\"><div data-syl=\"la\" class=\"item\">la</div></div><div class=\"col-xs-4\"><div data-syl=\"ble\" class=\"item\">ble</div></div></div></div><div class=\"col-sm-6\"><div class=\"row\"><div class=\"col-xs-4\"><div data-syl=\"con\" class=\"item\">con</div></div><div class=\"col-xs-4\"><div data-syl=\"sta\" class=\"item\">sta</div></div><div class=\"col-xs-4\"><div data-syl=\"nt\" class=\"item\">nt</div></div></div></div></div></div><div class=\"col-sm-2 hidden-xs\"><p>Guessed:</p></div></div><div class=\"row\"><div class=\"col-sm-10\"><div class=\"well well-sm dropspot\"><button data-target=\"combine-syllables.validate\" class=\"btn btn-default pull-right hidden-xs\">Submit</button><span class=\"hint\">Drop some of the syllables above in here</span></div></div><div class=\"col-sm-2\"><button data-target=\"combine-syllables.validate\" class=\"btn btn-default visible-xs\">Submit</button><p class=\"visible-xs\">Guessed:</p><div class=\"well well-sm wordwell\"><div class=\"wordlist\"></div><button data-target=\"combine-syllables.clearlist\" class=\"btn btn-default\">Clear</button></div></div></div></div></div><script>Exercises.pop();</script>"; }});