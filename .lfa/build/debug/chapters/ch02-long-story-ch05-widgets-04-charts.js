registerChapter({ chapter: "ch02-long-story-ch05-widgets-04-charts", content: function () { return "<h1 id=\"charts\">Charts</h1>\n<p>:markdown\n  The <code>charts</code> module has 2 components: <code>horizontal charts</code> and <code>vertical charts</code>, you cand use either / both of them according to your needs.</p>\n<h2 id=\"horizontal-charts\">Horizontal Charts</h2>\n<hr>\n<p>  This chart type can be implemented by calling <code>+hchart(options)</code> mixin with a series of options like:</p>\n<ul>\n<li><code>bars</code> - this is an <strong>Array</strong> that tells the chart how many horizontal bars will be. Inside we have <code>JSON</code>s describing each bar by:<ul>\n<li><code>name</code> - simple <strong>String</strong></li>\n<li><code>data</code> - <strong>Array</strong> containing both the <code>value</code> of the current bar and the <code>color</code> of the bar / segment for the previous value.<ul>\n<li><code>value</code> - <strong>Number</strong></li>\n<li><code>color</code> - <strong>String</strong> that is inserted as is in the <code>background</code> CSS property of the previous value segment.</li>\n</ul>\n</li>\n<li><code>stacked</code> - <strong>Boolean</strong> that tells the chart to show the bars described above on a single stacked bar, not individually.</li>\n</ul>\n</li>\n<li><code>legend</code> - <strong>Array</strong>. If you want to show a nice centered legend below the chart, use this property that accepts <code>JSON</code>s having:<ul>\n<li><code>name</code> - <strong>String</strong>. The name of the legent item.</li>\n<li><code>color</code> - <strong>String</strong>, If you want to show a color box near the name stated above, complete this field. The value will go as is if the <code>backgound</code> CSS property of the current item.</li>\n</ul>\n</li>\n<li><code>step</code> - <strong>Number</strong>. Use this if you want to show the scale of the current chart and tell the mixin the step value.</li>\n<li><code>maxSteps</code> - <strong>Number</strong>. If the scale of the given chart is different than <code>100</code>, use this field to specify the desired scale. The <code>bars</code> will be scaled accordingly.</li>\n<li><code>height</code> - <strong>String</strong>. The height of the chart. Defaulted to <code>200px</code>.</li>\n<li><p><code>width</code> - <strong>String</strong>. The width of chart bars. Defaulted to <code>40px</code>.</p>\n<h3 id=\"example\">Example</h3>\n</li>\n</ul>\n<p>+hchart({\n  bars: [\n    { \n    name: &#39;Stacked&#39;,\n    data: [31, &#39;#000&#39;, 20, &#39;#888&#39;, 21, &#39;#aaa&#39;, 19, &#39;#000&#39;, 9, &#39;#ddd&#39;],\n    stacked: true\n    },\n    { \n      name: &#39;Non Stacked Multi value&#39;,\n      data: [32, &#39;#3f0&#39;, 10, &#39;#3f8&#39;, 5, &#39;#afa&#39;],\n    },\n    { \n      name: &#39;Non Stacked Single value&#39;,\n      data: [38, &#39;#0f0&#39;]\n    }\n  ],\n  legend: [\n    {\n      name: &#39;Legend Item 1&#39;,\n      color: &#39;#ddd&#39;\n    },\n    {\n      name: &#39;Legenda Item 2&#39;,\n      color: &#39;#afa&#39;\n    },\n  ], \n  step: 20,\n})</p>\n<p>:markdown</p>\n<h4 id=\"the-code\">The code</h4>\n<pre><code>  +hchart({\n    bars: [\n      { \n      name: &#39;Stacked&#39;,\n      data: [31, &#39;#000&#39;, 20, &#39;#888&#39;, 21, &#39;#aaa&#39;, 19, &#39;#000&#39;, 9, &#39;#ddd&#39;],\n      stacked: true\n      },\n      { \n        name: &#39;Non Stacked Multi value&#39;,\n        data: [32, &#39;#3f0&#39;, 10, &#39;#3f8&#39;, 5, &#39;#afa&#39;],\n      },\n      { \n        name: &#39;Non Stacked Single value&#39;,\n        data: [38, &#39;#0f0&#39;]\n      }\n    ],\n    legend: [\n      {\n        name: &#39;Legend Item 1&#39;,\n        color: &#39;#ddd&#39;\n      },\n      {\n        name: &#39;Legenda Item 2&#39;,\n        color: &#39;#afa&#39;\n      },\n    ], \n    step: 20,\n  })\n</code></pre><h2 id=\"vertical-charts\">Vertical Charts</h2>\n<hr>\n<p>  This chart type can be implemented by calling <code>+vchart(options)</code> mixin with a series of options like:</p>\n<ul>\n<li><code>bars</code> - this is an <strong>Array</strong> that tells the chart how many vertical bars will be. Inside we have <code>JSON</code>s describing each bar by:<ul>\n<li><code>name</code> - simple <strong>String</strong></li>\n<li><code>data</code> - <strong>Array</strong> containing both the <code>value</code> of the current bar and the <code>color</code> of the bar / segment for the previous value.<ul>\n<li><code>value</code> - <strong>Number</strong></li>\n<li><code>color</code> - <strong>String</strong> that is inserted as is in the <code>background</code> CSS property of the previous value segment.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>legend</code> - <strong>Array</strong>. If you want to show a nice centered legend below the chart, use this property that accepts <code>JSON</code>s having:<ul>\n<li><code>name</code> - <strong>String</strong>. The name of the legent item.</li>\n<li><code>color</code> - <strong>String</strong>, If you want to show a color box near the name stated above, complete this field. The value will go as is if the <code>backgound</code> CSS property of the current item.</li>\n</ul>\n</li>\n<li><code>step</code> - <strong>Number</strong>. Use this if you want to show the scale of the current chart and tell the mixin the step value.</li>\n<li><code>maxSteps</code> - <strong>Number</strong>. If the scale of the given chart is different than <code>100</code>, use this field to specify the desired scale. The <code>bars</code> will be scaled accordingly.</li>\n</ul>\n<pre><code>###Example\n</code></pre><p>+vchart({\n  bars: [\n    { \n      name: &#39;Non Stacked Multi Value&#39;,\n      data: [25, &#39;#000&#39;, 22, &#39;#888&#39;, 21, &#39;#aaa&#39;],\n    },\n    { \n      name: &#39;Non Stack Single Value&#39;,\n      data: [38, &#39;#0f0&#39;],\n    }\n  ],\n  legend: [\n    {\n      name: &#39;Legend Item 1&#39;,\n      color: &#39;#ddd&#39;\n    },\n    {\n      name: &#39;Legenda Item 2&#39;,\n      color: &#39;#afa&#39;\n    },\n  ], \n  step: 25,\n  maxSteps: 125\n})</p>\n<p>:markdown</p>\n<h4 id=\"the-code\">The Code</h4>\n<pre><code>  +vchart({\n    bars: [\n      { \n        name: &#39;Non Stacked Multi Value&#39;,\n        data: [25, &#39;#000&#39;, 22, &#39;#888&#39;, 21, &#39;#aaa&#39;, 19, &#39;#000&#39;, 9, &#39;#ddd&#39;],\n      },\n      { \n        name: &#39;Non Stack Single Value&#39;,\n        data: [38, &#39;#0f0&#39;],\n      }\n    ],\n    legend: [\n      {\n        name: &#39;Legend Item 1&#39;,\n        color: &#39;#ddd&#39;\n      },\n      {\n        name: &#39;Legenda Item 2&#39;,\n        color: &#39;#afa&#39;\n      },\n    ], \n    step: 25,\n    maxSteps: 125\n  })\n</code></pre>"; }});