registerChapter({ chapter: "ch02-long-story-ch04-technical-03-exercises-11-three-d", content: function () { return "<h2 id=\"3d\">3D</h2>\n<p>The 3D widget allows you to add 3D visualizations to your textbooks</p>\n<h3 id=\"usage-\">Usage:</h3>\n<pre><code class=\"lang-jade\">+three-d(options)\n</code></pre>\n<h3 id=\"options-\">Options:</h3>\n<ul>\n<li><code>continuousRender</code>: Continuously re-renders the scene at 60fps even when it&#39;s not needed (this should be used for debugging only). Defaults to <code>false</code></li>\n<li><code>rotationSpeed</code>: The speed of the object&#39;s showroom rotation in radians/second. Use a negative value to change direction. Defaults to <code>0.5</code></li>\n<li><code>rotationAxis</code>: Unit vector corresponding to the showroom rotation axis. Defaults to <code>[0, 1, 0]</code> (rotate along the vertical axis)</li>\n<li><code>cameraPosition</code>: The camera&#39;s position in space. Defaults to <code>[0, 0, 5]</code> </li>\n<li><code>cameraLookAt</code>: The point in space where the camera is directed at. Defaults to <code>[0, 0, 0]</code> </li>\n<li><code>enableInput</code>: Allows the user to rotate the object. Defaults to <code>true</code></li>\n<li><code>ambientLight</code>: The color and intensity of the ambient light in hex notation. Defaults to <code>0x404040</code></li>\n<li><code>backgroundColor</code>: The color of the background in hex notation. Defaults to <code>undefined</code>. <code>undefined</code> means transparency.</li>\n<li><code>lights</code>: An array of lights. Defaults to a directional light and a point light pointing from <code>[-3, 1, 3]</code> and <code>[3, 1, 3]</code>. Both white.</li>\n<li><code>url</code>: URL to a THREE.js <a href=\"https://github.com/mrdoob/three.js/wiki/JSON-Object-Scene-format-4\">JSON Object/Scene format 4</a> file containing an object (NOT A SCENE) at the root. Defaults to a green 1x1x1 cube.</li>\n<li><code>width</code>: CSS expression specifying the width of the widget</li>\n<li><code>height</code>: CSS expression specifying the height of the widget</li>\n<li><code>aspectRatio</code>: The desired aspect ratio (width/height) of the widget. Defaults to <code>4/3</code></li>\n</ul>\n<h3 id=\"lights-\">Lights:</h3>\n<p>Lights are JSON objects of with the following fields:</p>\n<ul>\n<li><code>type</code>: One of <code>&#39;point&#39;</code> or <code>&#39;directional&#39;</code>. Point lights are positioned at a fixed location in space and shine dimmer with distance (like a light bulb). Directional lights are positioned at infinity and shine with constant intensity from a specified direction (like the sun). Defaults to <code>point</code>.</li>\n<li><code>position</code>: The light&#39;s position (or direction if <code>type</code> is <code>&#39;directional&#39;</code>)</li>\n<li><code>intensity</code>: The light&#39;s intensity. Defaults to <code>1.0</code> for point lights and <code>0.5</code> for directional lights.</li>\n<li><code>color</code>: The light&#39;s color in hex notation. Defaults to <code>0xffffff</code> (white)</li>\n<li><code>distance</code>: A point light&#39;s maximum reach. Intensity will linearily decay from <code>intensity</code> (right near the light) to zero (at <code>distance</code>). Defaults to <code>5</code></li>\n</ul>\n<p>If you only have one light in your scene, you can specify the light&#39;s options directly in the <code>options</code> object like this: </p>\n<pre><code class=\"lang-jade\">+three-d({\n  lightType: &#39;directional&#39;,\n  lightColor: 0xcc2222, //red-ish\n  lightPosition: [0, -3, 0], //from the bottom\n  intensity: 0.3, //pretty dim\n})\n</code></pre>\n<h3 id=\"responsive-layout\">Responsive layout</h3>\n<p>Since CSS doesn&#39;t allow fixing an aspect ratio while allowing for flexible width, we added 3 options: <code>width</code>, <code>height</code>, <code>aspectRatio</code>. Setting either two of these parameters is enough to fully define the widget&#39;s size. Percentages (or any CSS unit) are allowed for <code>width</code> and <code>height</code>. By default, <code>width</code> is set to <code>100%</code>, <code>aspectRatio</code> to <code>4/3</code> while <code>height</code> is not defined, meaning that the widget will always span the full width of its container, adjusting its height dynamically so that a <code>4:3</code> aspect ratio is preserved.</p>\n<p>You should never touch the width and height of a <code>three-d</code> widget with CSS. If you can&#39;t do with the options, use CSS on a container of the widget.</p>\n<h3 id=\"simple-example-\">Simple Example:</h3>\n<p><strong>Code</strong></p>\n<pre><code class=\"lang-jade\">+three-d({\n  name: &#39;simple-example&#39;,\n})\n</code></pre>\n<p><strong>Style</strong></p>\n<pre><code class=\"lang-stylus\">.three-d.simple-example\n  width: 100%\n  height: 400px\n</code></pre>\n<p><strong>Rendered exercise</strong></p>\n<script>var ex_918967375 = Exercises.push(new Exercises.ThreeD(918967375, '{\"name\":\"simple-example\",\"ignoreScore\":true}'));\n</script><div id=\"ex_918967375\" class=\"three-d\"></div><script>Exercises.pop();</script><h3 id=\"advanced-example-\">Advanced Example:</h3>\n<p><strong>Code</strong></p>\n<pre><code class=\"lang-jade\">+three-d({\n  url: &#39;3d/mug/mug.json&#39;,\n  name: &#39;advanced-example&#39;,\n  backgroundColor: &#39;#eeeeee&#39;,\n  lights: [\n    {\n      type: &#39;directional&#39;,\n      color: 0xcc2222, //red-ish\n      position: [0, -1, 0], //from the bottom\n      intensity: 0.3, //pretty dim\n    },\n    {\n      type: &#39;directional&#39;,\n      position: [0, 0, 1], //from behind the camera\n      intensity: 0.1, //just a tad\n    },\n    {\n      type: &#39;point&#39;,\n      position: [3, 1, 3], //front-right\n    },\n    {\n      type: &#39;point&#39;,\n      position: [-3, 1, 3], //front-left\n    },\n  ],\n})\n</code></pre>\n<p><strong>Style</strong></p>\n<pre><code class=\"lang-stylus\">.three-d.advanced-example\n  width: 100%\n  height: 400px\n</code></pre>\n<p><strong>Rendered exercise</strong></p>\n<script>var ex_806361791 = Exercises.push(new Exercises.ThreeD(806361791, '{\"url\":\"3d/mug/mug.json\",\"name\":\"advanced-example\",\"backgroundColor\":\"#eeeeee\",\"lights\":[{\"type\":\"directional\",\"color\":13378082,\"position\":[0,-1,0],\"intensity\":0.3},{\"type\":\"directional\",\"position\":[0,0,1],\"intensity\":0.1},{\"type\":\"point\",\"position\":[3,1,3]},{\"type\":\"point\",\"position\":[-3,1,3]}],\"ignoreScore\":true}'));\n</script><div id=\"ex_806361791\" class=\"three-d\"></div><script>Exercises.pop();</script>"; }});