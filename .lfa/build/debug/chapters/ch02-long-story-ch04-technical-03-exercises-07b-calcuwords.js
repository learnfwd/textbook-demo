registerChapter({ chapter: "ch02-long-story-ch04-technical-03-exercises-07b-calcuwords", content: function () { return "<h2 id=\"calcuwords-the-mathematic-crosswords\">Calcuwords - the Mathematic Crosswords</h2>\n<p>Calcuwords resembles</p>\n<p>The grid is magically rendered in the <code>.calcugrid</code> element (as a Backbone View if\nyou&#39;re really interested in the details).</p>\n<p>N.B. You can use the generator at the end of this page. Although far from perfect, it makes your</p>\n<p><strong>Replacements</strong></p>\n<ul>\n<li><code>*</code> (star) to <code>×</code> (<code>&amp;times;</code>)</li>\n<li><code>--</code> (minus-minus) to <code>—</code> (<code>&amp;mdash;</code>)</li>\n<li><code>-</code> (minus) to <code>–</code> (<code>&amp;ndash;</code>)</li>\n<li><code>/</code> (slash) to <code>÷</code> (<code>&amp;divide;</code>)</li>\n</ul>\n<p>In the &#39;words&#39; field, put a question mark after the items you want to be guessed, not just displayed.</p>\n<p><strong>Sample code</strong></p>\n<pre><code>  +exercise({\n  name: &#39;calcuwords-haha&#39;,\n  description: &#39;Calcuwords exercises&#39;,\n  firstTimeDoneMessage: &#39;Bravo!&#39;\n  })\n  .row\n    .progress-box\n    .col-md-6.col.col-xs-12.well\n      +calcuwords({\n          name: &#39;plain-addition&#39;,\n          words: [\n            [&#39;1&#39;, &#39;2&#39;, &#39;+&#39;],\n            [&#39;&#39;, &#39;9&#39;, &#39;&#39;],\n            [&#39;2?&#39;, &#39;1?&#39;, &#39;&#39;],\n          ],\n          linesAt: [2]\n        })\n        .inline-block\n          .is-done-box\n          .calcugrid.sans\n    .col-md-6.col.col-xs-12.well\n      +calcuwords({\n          name: &#39;more rows&#39;,\n          words: [\n            [&#39;3&#39;, &#39;2&#39;, &#39;7&#39;, &#39;+&#39;],\n            [&#39; &#39;, &#39;8&#39;, &#39;8&#39;, &#39;&#39;],\n            [&#39;2&#39;, &#39;9&#39;, &#39;7&#39;, &#39;&#39;],\n            [&#39;7?&#39;, &#39;1?&#39;, &#39;2?&#39;, &#39;&#39;],\n          ],\n          linesAt: [3]\n        })\n        .inline-block\n          .is-done-box\n          .calcugrid.sans\n    .col-md-6.col.col-xs-12.well\n      +calcuwords({\n          name: &#39;pe-lung&#39;,\n          words: [\n            [&#39;There are &#39;, &#39;1?&#39;, &#39;2?&#39;, &#39;stars on the EU flag&#39;]\n          ]\n        })\n        .inline-block\n          .is-done-box\n          .calcugrid.sans\n    .col-md-6.col.col-xs-12.well\n      +calcuwords({\n        name: &#39;operators-exercise&#39;,\n        words: [\n          [&#39;2&#39;, &#39;*?&#39;, &#39;(?&#39;, &#39;2 + 2&#39;, &#39;)?&#39;, &#39;= 8&#39;]\n        ]\n        })\n        .inline-block\n          .is-done-box\n          .calcugrid.sans\n</code></pre><p><strong>Rendered code</strong></p>\n<script>var ex_1176965459 = Exercises.push(new Exercises.Exercise(1176965459, '{\"name\":\"calcuwords-haha\",\"description\":\"Calcuwords exercises\",\"firstTimeDoneMessage\":\"Bravo!\"}'));\n</script><div id=\"ex_1176965459\" class=\"exercise\"><div class=\"row\"><div class=\"progress-box\"></div><div class=\"col-md-6 col col-xs-12 well\"><script>var ex_563705514 = Exercises.push(new Exercises.Calcuwords(563705514, '{\"name\":\"plain-addition\",\"words\":[[\"1\",\"2\",\"+\"],[\"\",\"9\",\"\"],[\"2?\",\"1?\",\"\"]],\"linesAt\":[2]}'));</script><div id=\"ex_563705514\" class=\"calcuwords\"><div class=\"inline-block\"><div class=\"is-done-box\"></div><div class=\"calcugrid sans\"></div></div></div><script>Exercises.pop();</script></div><div class=\"col-md-6 col col-xs-12 well\"><script>var ex_191181907 = Exercises.push(new Exercises.Calcuwords(191181907, '{\"name\":\"more rows\",\"words\":[[\"3\",\"2\",\"7\",\"+\"],[\" \",\"8\",\"8\",\"\"],[\"2\",\"9\",\"7\",\"\"],[\"7?\",\"1?\",\"2?\",\"\"]],\"linesAt\":[3]}'));</script><div id=\"ex_191181907\" class=\"calcuwords\"><div class=\"inline-block\"><div class=\"is-done-box\"></div><div class=\"calcugrid sans\"></div></div></div><script>Exercises.pop();</script></div><div class=\"col-md-6 col col-xs-12 well\"><script>var ex_319811581 = Exercises.push(new Exercises.Calcuwords(319811581, '{\"name\":\"pe-lung\",\"words\":[[\"There are \",\"1?\",\"2?\",\"stars on the EU flag\"]]}'));</script><div id=\"ex_319811581\" class=\"calcuwords\"><div class=\"inline-block\"><div class=\"is-done-box\"></div><div class=\"calcugrid sans\"></div></div></div><script>Exercises.pop();</script></div><div class=\"col-md-6 col col-xs-12 well\"><script>var ex_1191440435 = Exercises.push(new Exercises.Calcuwords(1191440435, '{\"name\":\"operators-exercise\",\"words\":[[\"2\",\"*?\",\"(?\",\"2 + 2\",\")?\",\"= 8\"]]}'));</script><div id=\"ex_1191440435\" class=\"calcuwords\"><div class=\"inline-block\"><div class=\"is-done-box\"></div><div class=\"calcugrid sans\"></div></div></div><script>Exercises.pop();</script></div></div></div><script>Exercises.pop();</script><h3 id=\"customisation\">Customisation</h3>\n<pre><code>  //\n  // Calcuwords\n  //\n\n  .calcuwords-grid\n    .calcuwords-block\n      min-width: 30px\n      height: 30px\n      font-size: 25px\n      margin: 2px 2px\n      padding: 0\n    .calcuwords-block-editable\n      input\n        width: 30px\n        height: 30px\n\n        border: 1px solid #76B1C0\n        border-radius: 20%\n        color: #76B1C0\n\n        text-align: center\n        font-size: 22px\n        padding: 0\n    .calcuwords-block-operator\n      input\n        border-radius: 50% !important\n        font-size: 20px\n\n    .calcuwords-block-ok\n      input\n        border: 1px solid #0A0 !important\n        color: #0A0 !important\n    hr\n      height: 2px\n      background-color: black\n      padding: 0\n      margin: 0\n</code></pre><h3 id=\"candy-for-your-productivity-calcuwords-generator\">Candy for your productivity: Calcuwords Generator</h3>\n<p>Guess what? There is a generator for the mixin.</p>\n<ol>\n<li>Design the exercise on a sheet of squared paper or in a spreadsheet</li>\n<li>Fill in the with<ul>\n<li>the name for the exercise</li>\n<li>number of columns</li>\n<li>number of rows</li>\n</ul>\n</li>\n<li>Write the numbers, letters and operators inside the blue grid below.\n For numbers / letters / operators that you need the student to fill in\n add a <code>?</code> sign after it. I.e. &#39;8&#39; will output a static label, and &#39;8?&#39;\n will output an input text box that validates when the user enters &#39;8&#39;.</li>\n<li>Copy and paste the generated mixin declaration in your code</li>\n</ol>\n<div id=\"calcugenerator\">The name for the exercise is:&nbsp;<div class=\"inline-block\"><script>(function () {\n  var exercise = Exercises.push(new Exercises.Textline(481709573, '{\"name\":\"calcugenerator-name\",\"type\":\"text\",\"pattern\":\"^[\\\\\\\\w|\\\\\\\\-|_]+$\",\"size\":8,\"max\":20,\"dontSave\":true}'));\n  if (true) {\n    try {\n      var DashboardLoader = require('exercise-dashboard-loader');\n    } catch (ex) {};\n    if (DashboardLoader) {\n      DashboardLoader('#ex_cdb_481709573', exercise);\n    }\n  }\n})();\n</script><div id=\"ex_cdb_481709573\" class=\"classroom-dashboard\"></div><div id=\"ex_481709573\" class=\"textline\"><div class=\"block\"></div></div><script>Exercises.pop();</script></div>&nbsp; and it has:&nbsp;<div class=\"inline-block\"><script>(function () {\n  var exercise = Exercises.push(new Exercises.Textline(352016931, '{\"name\":\"calcugenerator-columns\",\"type\":\"numeric\",\"pattern\":\"^\\\\\\\\d+$\",\"size\":2,\"max\":2,\"dontSave\":true}'));\n  if (true) {\n    try {\n      var DashboardLoader = require('exercise-dashboard-loader');\n    } catch (ex) {};\n    if (DashboardLoader) {\n      DashboardLoader('#ex_cdb_352016931', exercise);\n    }\n  }\n})();\n</script><div id=\"ex_cdb_352016931\" class=\"classroom-dashboard\"></div><div id=\"ex_352016931\" class=\"textline\"><div class=\"block\"></div></div><script>Exercises.pop();</script></div>&nbsp; columns and : &nbsp;<div class=\"inline-block\"><script>(function () {\n  var exercise = Exercises.push(new Exercises.Textline(481842515, '{\"name\":\"calcugenerator-rows\",\"type\":\"numeric\",\"pattern\":\"\\\\\\\\d+$\",\"size\":2,\"max\":2,\"dontSave\":true}'));\n  if (true) {\n    try {\n      var DashboardLoader = require('exercise-dashboard-loader');\n    } catch (ex) {};\n    if (DashboardLoader) {\n      DashboardLoader('#ex_cdb_481842515', exercise);\n    }\n  }\n})();\n</script><div id=\"ex_cdb_481842515\" class=\"classroom-dashboard\"></div><div id=\"ex_481842515\" class=\"textline\"><div class=\"block\"></div></div><script>Exercises.pop();</script></div>&nbsp; rows<div class=\"row\"><div class=\"col-xs-12 col-md-6\"><div class=\"cg-grid sans\"></div></div><div class=\"col-xs-12 col-md-6\"><pre class=\"cg-output\"></pre></div></div></div><script>var $cg     = $('#calcugenerator');\nvar $grid   = $cg.find('.cg-grid');\nvar $output = $cg.find('.cg-output');\n\nvar cols = 3;\nvar rows = 3;\nvar exName = 'REPLACE_THIS';\n\nvar matwix = [];\nvar linesSelected = [];\n\nvar reGenerateInputs = function() {\n  rows = parseInt(rows);\n  cols = parseInt(cols);\n\n  if(isNaN(rows) || isNaN(cols)) {return;}\n\n  var i = 0;\n  var j = 0;\n\n  $grid.empty();\n\n  var $row;\n  while (i < rows) {\n    matwix[i] = matwix[i] || []\n    $row = $('<div></div>');\n\n    j = 0;\n    while (j < cols) {\n      matwix[i][j] = matwix[i][j] || '';\n      var $input = $('<input>').\n            data('row', i).\n            data('col', j).\n            val(matwix[i][j]).blur(function(e) {\n              reGenerateOuput();\n            });\n      $row.append($input);\n      j++;\n    }\n\n    var $lineButton = $('<div></div>').\n      addClass('add-line-button').\n      width(cols * 46 + 'px').\n      data('row', i).\n      click(function(){\n        $(this).toggleClass('add-line-button-selected');\n        updateLinesSelected();\n      });\n\n    if(linesSelected[i]) {\n      $lineButton.addClass('add-line-button-selected');\n    }\n\n    $row.append('<div class=\"clear-fix\"></div>');\n    $row.append($lineButton);\n    $row.append('<div class=\"clear-fix\"></div>');\n    $grid.append($row);\n    i++;\n  }\n\n  reGenerateOuput();\n};\n\nvar refreshMatwix = function() {\n  $inputs = $grid.find('input');\n\n  $inputs.each(function (id) {\n    $el = $inputs.eq(id);\n    matwix[$el.data('row')][$el.data('col')] = $el.val();\n  });\n};\n\nvar updateLinesSelected = function () {\n  linesSelected = [];\n  $lines = $grid.find('.add-line-button-selected');\n  $lines.each(function(id) {\n    linesSelected[$lines.eq(id).data('row')] = true\n  });\n  reGenerateOuput();\n};\n\nvar reGenerateOuput = function() {\n  var i, j;\n\n  refreshMatwix();\n\n  var words = '[\\n';\n  for(i = 0; i < matwix.length; i++) {\n    words += '    ['\n    for(j = 0; j < matwix[i].length - 1; j++) {\n      words += '\\'' + matwix[i][j] + '\\', ';\n    }\n    words += '\\'' + matwix[i][j]+ '\\'';\n    words +='],\\n'\n  }\n  words = words.slice(0, -1) + '\\n  ]';\n\n  var linesAt = '';\n\n  i = 0;\n  while(i < linesSelected.length) {\n    if(linesSelected[i]) {\n      linesAt += (1 + i) + ', '\n    }\n    i++;\n  }\n  linesAt = '[' + linesAt.slice(0, -2) + ']';\n\n  var output = '';\n  output += '+calcuwords({\\n';\n  output += '  name: \\'' + $.trim(exName) + '\\', \\n';\n  output += '  words: ' + words + ',\\n';\n  output += '  linesAt: ' + linesAt + ',\\n';\n  output += '  })\\n';\n  output += '  .progress-box\\n';\n  output += '  .calcugrid\\n';\n\n  $output.text(output);\n};\n\nwindow.App.on('exercise:state:changed', function(state, exercise) {\n  switch (exercise.name) {\n    case 'calcugenerator-columns':\n      cols = parseInt(state);\n      reGenerateInputs();\n      break;\n    case 'calcugenerator-rows':\n      rows = parseInt(state);\n      reGenerateInputs();\n      break;\n    case 'calcugenerator-name':\n      exName = state;\n      reGenerateOuput();\n      break;\n  }\n});\n\nreGenerateInputs();\n</script><div class=\"panel panel-warning\"><div class=\"panel-heading\">**ACHTUNG! ACHTUNG**</div><div class=\"panel-body\"><ul><li>Please note that the generator does not save state!</li><li>Resizing on the fly works, but was not tested and can lead to\nuncertain results.</li><li>Navigate with tab key (Shift + Tab to go backwards)</li></ul></div></div>"; }});